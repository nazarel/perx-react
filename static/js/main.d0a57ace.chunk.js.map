{"version":3,"sources":["api/agent.js","reducers/actions.js","components/Input.js","components/List/ListItem.js","components/List/OrganizationList.js","components/List/RepoList.js","App.js","reducers/repos.js","reducer.js","reducers/organizations.js","store.js","middleware.js","index.js"],"names":["responseBody","res","body","requests","url","superagent","get","query","then","ApiCalls","getRepos","username","queryOpt","getOrgs","GET_REPOS","GET_REPOS_SUCCESS","GET_REPOS_FAILED","GET_ORGANIZATIONS","GET_ORGANIZATIONS_SUCCESS","GET_ORGANIZATIONS_FAILED","Input","label","type","useState","setUsername","inputError","setError","dispatch","useDispatch","useSelector","state","OrganizationReducer","error","isError","hasError","errorMessage","message","className","onChange","e","value","target","replace","setInput","onClick","payload","getData","ListItem","image","header","content","src","OrganizationList","orgs","organizations","Array","map","i","index","key","login","description","avatar_url","RepoList","repos","RepoReducer","name","App","dataExists","combineReducers","action","Action","isLoading","createStore","reducer","applyMiddleware","store","next","v","noPayload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0a57ace.chunk.js","sourcesContent":["import superagent from 'superagent';\r\n\r\nconst API_ROOT = 'https://api.github.com';\r\nconst responseBody = res => res.body;\r\n\r\nconst requests = {\r\n  get: (url, body) =>\r\n    superagent.get(`${API_ROOT}${url}`).query(body).then(responseBody)\r\n};\r\n\r\nexport const ApiCalls = {\r\n  getRepos: (username, queryOpt) =>\r\n    requests.get(`/users/${username}/repos`, queryOpt),\r\n  getOrgs: (username, queryOpt) =>\r\n    requests.get(`/users/${username}/orgs`, queryOpt)\r\n};","export const GET_REPOS = \"GET_REPOS\";\r\nexport const GET_REPOS_SUCCESS = `${GET_REPOS}_SUCCESS`;\r\nexport const GET_REPOS_FAILED = `${GET_REPOS}_FAILED`;\r\n\r\nexport const GET_ORGANIZATIONS = \"GET_ORGANIZATIONS\";\r\nexport const GET_ORGANIZATIONS_SUCCESS = `${GET_ORGANIZATIONS}_SUCCESS`;\r\nexport const GET_ORGANIZATIONS_FAILED = `${GET_ORGANIZATIONS}_FAILED`;","import React, { useState } from 'react';\r\nimport { ApiCalls } from '../api/agent';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { GET_ORGANIZATIONS, GET_REPOS } from \"../reducers/actions\";\r\n\r\nfunction Input({label, type = 'text'}) {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [inputError, setError] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const { error, isError } = useSelector(state => {\r\n    return state.OrganizationReducer;\r\n  });\r\n\r\n  const getData = (username) => {\r\n    if(!!username) {\r\n      setError(false);\r\n      //move data fetching to PureComponent\r\n      dispatch({ type: GET_ORGANIZATIONS, payload: ApiCalls.getOrgs(username) });\r\n      dispatch({ type: GET_REPOS, payload: ApiCalls.getRepos(username) });\r\n    } else {\r\n      setError(true)\r\n    }\r\n  };\r\n\r\n  const setInput = (e) => {\r\n    let value = e.target.value.replace(/\\s+/g, '');\r\n\r\n    setUsername(value);\r\n  }\r\n\r\n  let hasError = isError || inputError;\r\n  let errorMessage = \"\";\r\n  if(inputError) {\r\n    errorMessage = \"*You need to enter a username to search\";\r\n  } else if (isError){\r\n    errorMessage = error.message;\r\n  }\r\n\r\n  return (\r\n    <label className={'label'}>\r\n      <span>{label}</span>\r\n      {hasError &&\r\n        <span className={'text-danger ml-3'}>\r\n          {errorMessage}\r\n        </span>\r\n      }\r\n      <input className='form-control' type={type} onChange={e => setInput(e)} value={username}/>\r\n      <button className={'btn'} onClick={() => getData(username)}>Search</button>\r\n    </label>\r\n  )\r\n}\r\n\r\nexport default Input;","import React, { useState, useEffect } from 'react';\r\n\r\nconst ListItem = ({image, header, content}) => {\r\n\r\n  return (\r\n    <div className=\"card flex\">\r\n      {!!image &&\r\n        <div>\r\n          <img className={'avatar'} src={image}/>\r\n        </div>\r\n      }\r\n      <div>\r\n        <h3>{header}</h3>\r\n        <div className=\"text-muted\">\r\n          {content}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListItem;","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ListItem from \"./ListItem\";\r\n\r\nexport const OrganizationList = () => {\r\n  const orgs = useSelector(state => { return state.OrganizationReducer.organizations;})\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <h2>Organizations</h2>\r\n      {orgs instanceof Array && orgs.map((i, index) => {\r\n        return (\r\n          <ListItem key={index} header={i.login} content={i.description} image={i.avatar_url} />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ListItem from \"./ListItem\";\r\n\r\nexport const RepoList = () => {\r\n  const repos = useSelector(state => {return state.RepoReducer.repos;})\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <h2>Repositories</h2>\r\n      {repos instanceof Array && repos.map((i, index) => {\r\n        return (\r\n          <ListItem key={index} header={i.name} />\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport './App.css';\nimport Input from \"./components/Input\";\nimport { OrganizationList } from \"./components/List/OrganizationList\";\nimport { RepoList } from \"./components/List/RepoList\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const orgs = useSelector(state => {\n    return state.OrganizationReducer.organizations;\n  });\n  const repos = useSelector(state => {\n    return state.RepoReducer.repos;\n  });\n\n  let dataExists = orgs !== null || repos !== null;\n\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <div className=\"header__inner container clearfix\">\n          <div className=\"header__brand\">\n            Perx React\n          </div>\n        </div>\n      </header>\n      <div className=\"content container\">\n        <div className={dataExists ? 'card input-container' : 'card input-container input-container--centralized'}>\n          <Input label={'Username'}/>\n        </div>\n        {dataExists &&\n          <div className=\"row\">\n            <div className=\"column\">\n              <OrganizationList/>\n            </div>\n            <div className=\"column\">\n              <RepoList/>\n            </div>\n          </div>\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import * as Action from './actions';\r\n\r\nexport const RepoReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case Action.GET_REPOS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n        repos: null\r\n      };\r\n    case Action.GET_REPOS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        repos: action.payload,\r\n      };\r\n    case Action.GET_REPOS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    default:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        repos: null,\r\n        ...state\r\n      }\r\n  }\r\n}","import { combineReducers } from \"redux\";\r\nimport { OrganizationReducer } from './reducers/organizations';\r\nimport { RepoReducer } from './reducers/repos';\r\n\r\nexport default combineReducers({\r\n  OrganizationReducer,\r\n  RepoReducer\r\n});","import * as Action from './actions';\r\n\r\nexport const OrganizationReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case Action.GET_ORGANIZATIONS:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n        organizations: null\r\n      };\r\n    case Action.GET_ORGANIZATIONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n        organizations: action.payload,\r\n      };\r\n    case Action.GET_ORGANIZATIONS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return {\r\n        isLoading: false,\r\n        isError: false,\r\n        organizations: null,\r\n        ...state\r\n      }\r\n  }\r\n}","import { applyMiddleware, createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport { promiseMiddleware } from \"./middleware\";\r\n\r\nexport default createStore(reducer, applyMiddleware(promiseMiddleware));","export const promiseMiddleware = store => next => action => {\r\n  if (isPromise(action.payload)) {\r\n    const { payload, ...noPayload } = action;\r\n    store.dispatch(noPayload);\r\n    action.payload.then(\r\n      res => {\r\n        action.payload = res;\r\n        action.type += \"_SUCCESS\";\r\n        store.dispatch(action);\r\n      },\r\n      error => {\r\n        action.type += \"_FAILED\";\r\n        action.error = true;\r\n        action.payload = error;\r\n        store.dispatch(action);\r\n      }\r\n    );\r\n    return;\r\n  }\r\n  next(action);\r\n};\r\n\r\nfunction isPromise(v) {\r\n  return v && typeof v.then === 'function';\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}